<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chaoxing.activity.mapper.UserStatSummaryMapper">
    <resultMap id="BaseResultMap" type="com.chaoxing.activity.model.UserStatSummary">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="uid" jdbcType="INTEGER" property="uid" />
        <result column="activity_id" jdbcType="INTEGER" property="activityId" />
        <result column="uname" jdbcType="VARCHAR" property="uname" />
        <result column="real_name" jdbcType="VARCHAR" property="realName" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="student_no" jdbcType="VARCHAR" property="studentNo" />
        <result column="organization_structure" jdbcType="VARCHAR" property="organizationStructure" />
        <result column="sign_up_num" jdbcType="INTEGER" property="signUpNum" />
        <result column="signed_up_num" jdbcType="INTEGER" property="signedUpNum" />
        <result column="sign_up_time" jdbcType="TIMESTAMP" property="signUpTime" />
        <result column="sign_in_num" jdbcType="INTEGER" property="signInNum" />
        <result column="signed_in_num" jdbcType="INTEGER" property="signedInNum" />
        <result column="sign_in_leave_num" jdbcType="INTEGER" property="signInLeaveNum" />
        <result column="not_sign_in_num" jdbcType="INTEGER" property="notSignInNum" />
        <result column="signed_in_rate" jdbcType="DECIMAL" property="signedInRate" />
        <result column="rating_num" jdbcType="INTEGER" property="ratingNum" />
        <result column="integral" jdbcType="DECIMAL" property="integral" />
        <result column="activity_integral" jdbcType="DECIMAL" property="activityIntegral" />
        <result column="participate_time_length" jdbcType="INTEGER" property="participateTimeLength" />
        <result column="is_qualified" jdbcType="BIT" property="qualified" />
        <result column="is_valid" jdbcType="BIT" property="valid" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>
    <sql id="Base_Column_List">
        t.id, t.uid, t.activity_id, t.uname, t.real_name, t.mobile, t.student_no, t.organization_structure, t.sign_up_num, t.signed_up_num, t.sign_up_time,
        t.sign_in_num, t.signed_in_num, t.sign_in_leave_num, t.not_sign_in_num, t.signed_in_rate, t.rating_num, t.integral, t.activity_integral, t.participate_time_length,
        t.is_qualified, t.is_valid, t.create_time, t.update_time
    </sql>
    <select id="paging" resultType="com.chaoxing.activity.model.UserStatSummary">
        SELECT
            t.*,
            ( CASE WHEN signInNum > 0 THEN ( CONVERT ( (signedInNum / signInNum) * 100, DECIMAL ( 10, 2 ))) ELSE 0 END ) signedInRate
        FROM (
                SELECT
                    t.uid uid,
                    t.uname uname,
                    t.real_name realName,
                    t.mobile mobile,
                    t.student_no studentNo,
                    t.organization_structure organizationStructure,
                    COUNT( 1 ) participateActivityNum,
                    SUM( t.sign_up_num) signUpNum,
                    SUM( t.signed_up_num) signedUpNum,
                    SUM( t.sign_in_num ) signInNum,
                    SUM( t.signed_in_num ) signedInNum,
                    SUM( t.rating_num ) ratingNum,
                    SUM( t.integral ) integral,
                    SUM( t2.qualified_status ) qualifiedNum,
                    SUM( t.participate_time_length ) participateTimeLength
                FROM
                    t_user_stat_summary t
                    INNER JOIN t_activity t1 ON t.activity_id = t1.id
                    AND t1.create_fid = #{userStatSummaryQuery.fid}
                    AND t1.`status` IN (1, 2, 3, 4)
                    LEFT JOIN t_user_result t2 ON t.activity_id = t2.activity_id
                    AND t.uid = t2.uid
                WHERE
                    1 = 1
                    <if test="userStatSummaryQuery.groupUids != null and userStatSummaryQuery.groupUids.size() != 0">
                        AND t.uid IN
                        <foreach collection="userStatSummaryQuery.groupUids" index="key" item="value" open="(" close=")" separator=",">
                            #{value}
                        </foreach>
                    </if>
                    <if test="userStatSummaryQuery.sw != null and userStatSummaryQuery.sw != ''">
                        AND (
                            t.real_name LIKE CONCAT('%', #{userStatSummaryQuery.sw}, '%')
                        OR
                            t.student_no LIKE CONCAT('%', #{userStatSummaryQuery.sw}, '%')
                        )
                    </if>
                GROUP BY
                    t.uid
        ) t
        <if test="userStatSummaryQuery.orderField != null and userStatSummaryQuery.orderField != ''">
            ORDER BY
                ${userStatSummaryQuery.orderField} ${userStatSummaryQuery.orderType}
        </if>
    </select>

     <select id="countUserParticipateActivityNum" resultType="java.lang.Integer">
         SELECT
            COUNT( 1 )
         FROM
             t_user_stat_summary t
             INNER JOIN t_activity t1 ON t.activity_id = t1.id
             AND t1.`status` > 0
             <if test="fid != null">
                 AND t1.create_fid = #{fid}
             </if>
         WHERE
             t.uid = #{uid}
            AND t.is_valid = 1
             <choose>
                 <when test="startTime != null and endTime != null">
                     AND t.create_time BETWEEN #{startTime} AND #{endTime}
                 </when>
                 <otherwise>
                     <if test="startTime != null">
                         AND t.create_time >= #{startTime}
                     </if>
                     <if test="endTime != null">
                         AND t.create_time <![CDATA[<=]]> #{endTime}
                     </if>
                 </otherwise>
             </choose>
     </select>

    <select id="pagingUserParticipate" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"></include>,
            CASE WHEN t2.qualified_status IS NULL THEN NULL WHEN t2.qualified_status = 1 THEN TRUE ELSE FALSE END qualified,
            t2.total_score totalScore
        FROM
            t_user_stat_summary t
            INNER JOIN t_activity t1 ON t.activity_id = t1.id
            AND t1.`status` > 0
            <if test="fid != null">
                AND t1.create_fid = #{fid}
            </if>
            LEFT JOIN t_user_result t2 ON t.uid = t2.uid
            AND t.activity_id = t2.activity_id
        WHERE
            t.uid = #{uid}
            AND t.is_valid = 1
            <choose>
                <when test="startTime != null and endTime != null">
                    AND t.create_time BETWEEN #{startTime} AND #{endTime}
                </when>
                <otherwise>
                    <if test="startTime != null">
                        AND t.create_time >= #{startTime}
                    </if>
                    <if test="endTime != null">
                        AND t.create_time <![CDATA[<=]]> #{endTime}
                    </if>
                </otherwise>
            </choose>
        ORDER BY
            FIELD( t1.`status`, 2, 3, 4 ),
            t1.start_time DESC
    </select>

    <select id="countUserTotalTimeLength" resultType="java.lang.Integer">
        SELECT
            SUM( t.participate_time_length )
        FROM
            t_user_stat_summary t
        WHERE
            t.uid = #{uid}
            AND t.is_valid = 1
    </select>

    <select id="pageUserStatResult" resultType="com.chaoxing.activity.model.UserStatSummary">
        SELECT
        t.*,
        ( CASE WHEN signInNum > 0 THEN ( CONVERT ( (signedInNum / signInNum) * 100, DECIMAL ( 10, 2 ))) ELSE 0 END ) signedInRate
        FROM (
        SELECT
        t.uid uid,
        t.uname uname,
        t.real_name realName,
        t.mobile mobile,
        t.student_no studentNo,
        t.organization_structure organizationStructure,
        COUNT( 1 ) participateActivityNum,
        SUM( t.sign_up_num) signUpNum,
        SUM( t.signed_up_num) signedUpNum,
        SUM( t.sign_in_num ) signInNum,
        SUM( t.signed_in_num ) signedInNum,
        SUM( t.rating_num ) ratingNum,
        SUM( t.integral ) integral,
        SUM( t2.qualified_status ) qualifiedNum,
        SUM( t.participate_time_length ) participateTimeLength,
        SUM( t2.total_score) as totalScore
        FROM
        t_user_stat_summary t
        INNER JOIN t_activity t1 ON t.activity_id = t1.id
        <choose>
            <when test="marketId != null">
                AND t1.market_id = #{marketId}
            </when>
            <otherwise>
                <if test="fid != null">
                    AND t1.create_fid = #{fid}
                </if>
            </otherwise>
        </choose>
        AND t1.`status` IN (1, 2, 3, 4)
        LEFT JOIN t_user_result t2 ON t.activity_id = t2.activity_id
        AND t.uid = t2.uid
        WHERE
        1 = 1
        <if test="uidList != null and uidList.size() != 0">
            AND t.uid IN
            <foreach collection="uidList" index="key" item="value" open="(" close=")" separator=",">
                #{value}
            </foreach>
        </if>
        GROUP BY
        t.uid
        ORDER BY
        t1.create_time DESC
        ) t

    </select>

    <select id="pageUserSummaryStat" resultType="com.chaoxing.activity.dto.stat.UserSummaryStatDTO">
        SELECT
            t.uid,
            t.real_name realName,
            sum( t.integral ) integralSum
        FROM
            t_user_stat_summary t
        <if test="fid != null or marketId != null">
            INNER JOIN t_activity t1 ON t1.id = t.activity_id
            <choose>
                <when test="marketId != null">
                    AND t1.market_id = #{marketId}
                </when>
                <otherwise>
                    <if test="fid != null">
                        AND t1.create_fid = #{fid}
                    </if>
                </otherwise>
            </choose>
        </if>
        WHERE
            activity_id IS NOT NULL
            AND t.is_qualified = 1
            AND t.is_valid = 1
        GROUP BY
            t.uid
        ORDER BY
            integralSum DESC
    </select>

</mapper>