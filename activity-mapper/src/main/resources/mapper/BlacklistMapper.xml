<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chaoxing.activity.mapper.BlacklistMapper">
    <resultMap id="BaseResultMap" type="com.chaoxing.activity.model.Blacklist">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="market_id" jdbcType="INTEGER" property="marketId" />
        <result column="uid" jdbcType="INTEGER" property="uid" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="account" jdbcType="VARCHAR" property="account" />
        <result column="default_num" jdbcType="INTEGER" property="defaultNum" />
        <result column="join_type" jdbcType="VARCHAR" property="joinType" />
        <result column="effective_hours" jdbcType="INTEGER" property="effectiveHours" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>
    <sql id="Base_Column_List">
        t.id, t.market_id, t.uid, t.user_name, t.account, t.default_num, t.join_type, t.effective_hours, t.create_time, t.update_time
    </sql>

    <insert id="batchAdd">
        INSERT INTO t_blacklist ( market_id, uid, user_name, account, default_num, join_type, effective_hours )
        VALUES
            <foreach collection="blacklists" index="key" item="value" open="" close="" separator=",">
                ( #{value.marketId}, #{value.uid}, #{value.userName}, #{value.account}, #{value.defaultNum}, #{value.joinType}, #{value.effectiveHours} )
            </foreach>
    </insert>

    <select id="pageBlacklist" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"></include>
        FROM
            t_blacklist t
        WHERE
            t.market_id = #{blacklistQueryDto.marketId}
            <if test="blacklistQueryDto.sw != null and blacklistQueryDto.sw != ''">
                AND (
                    t.user_name LIKE CONCAT( '%', #{blacklistQueryDto.sw}, '%' )
                    OR t.account LIKE CONCAT( '%', #{blacklistQueryDto.sw}, '%' )
                )
            </if>
        ORDER BY
            t.create_time ${blacklistQueryDto.orderType.value}
    </select>

</mapper>