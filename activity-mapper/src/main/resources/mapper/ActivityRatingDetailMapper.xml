<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chaoxing.activity.mapper.ActivityRatingDetailMapper">
    <resultMap id="BaseResultMap" type="com.chaoxing.activity.model.ActivityRatingDetail">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="activity_id" jdbcType="INTEGER" property="activityId" />
        <result column="scorer_uid" jdbcType="INTEGER" property="scorerUid" />
        <result column="scorer_user_name" jdbcType="VARCHAR" property="scorerUserName" />
        <result column="score" jdbcType="DECIMAL" property="score" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
        <result column="is_anonymous" jdbcType="BIT" property="anonymous" />
        <result column="is_deleted" jdbcType="BIT" property="deleted" />
        <result column="is_manager_deleted" jdbcType="BIT" property="managerDeleted" />
        <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="create_uid" jdbcType="INTEGER" property="createUid" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="update_uid" jdbcType="INTEGER" property="updateUid" />
    </resultMap>
    <sql id="Base_Column_List">
        t.id, t.activity_id, t.scorer_uid, t.scorer_user_name, t.score, t.comment, t.is_anonymous, 
        t.is_deleted, t.is_manager_deleted, t.audit_status, t.create_time, t.create_uid, 
        t.update_time, t.update_uid
    </sql>

    <select id="listByQuery" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"></include>
        FROM
            t_activity_rating_detail t
        WHERE
            t.activity_id = #{params.activityId}
            AND t.is_deleted = 0
            AND (
                t.audit_status = 1
                <if test="params.uid != null">
                    OR t.scorer_uid = #{params.uid}
                </if>
            )
            <if test="params.auditStatus != null">
                AND t.audit_status = #{params.auditStatus}
            </if>
        GROUP BY
            t.id
        ORDER BY
            <if test="params.uid != null">
                t.scorer_uid <![CDATA[<>]]> #{params.uid} ,
            </if>
            t.create_time DESC
    </select>

    <select id="listUserCreated" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"></include>
        FROM
            t_activity_rating_detail t
        WHERE
            t.activity_id = #{activityId}
            AND t.is_deleted = 0
            AND t.create_uid = #{uid}
        ORDER BY
            t.create_time DESC
    </select>

    <update id="batchUpAuditStatus">
        UPDATE `t_activity_rating_detail`
        SET
            `audit_status` = #{auditStatus}
        WHERE
            `activity_id` = #{activityId}
            AND `id` IN
            <foreach collection="ratingDetailIds" index="key" item="value" open="(" close=")" separator=",">
                #{value}
            </foreach>
    </update>
</mapper>